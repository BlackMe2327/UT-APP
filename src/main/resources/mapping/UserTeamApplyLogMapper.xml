<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="run.ut.app.mapper.UserTeamApplyLogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="run.ut.app.model.domain.UserTeamApplyLog">
        <id column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="team_id" property="teamId" />
        <result column="mode" property="mode" />
        <result column="status" property="status" />
        <result column="message" property="message" />
        <result column="deleted" property="deleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <resultMap id="applyOrInviteMsgVO" type="run.ut.app.model.vo.ApplyOrInviteMsgVO">
        <result column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
        <result column="logo" property="logo" />
        <result column="team_id" property="teamId" />
        <result column="team_name" property="teamName" />
        <result column="recruitment_id" property="recruitmentId" />
        <result column="recruitment_name" property="recruitmentName" />
        <result column="status" property="status" />
        <result column="message" property="message" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!--这里可以合并成两条动态sql，我不合并的原因是方便前端,如果实在觉得难看，以后会改-->
    <select id="listUserApplyMsg" resultMap="applyOrInviteMsgVO">
        select utal.id, utal.uid, utal.`status`, utal.message, utal.recruitment_id, tr.`name` recruitment_name, t.id team_id, t.logo, t.`name` team_name, utal.create_time, utal.update_time
            from user_team_apply_log utal
                inner join teams t on t.id = utal.team_id
                left join teams_recruitments tr on (tr.id = utal.recruitment_id and tr.team_id = t.id)
          <where>
            1=1
            <if test="status!=null">
                and utal.`status` = #{status}
            </if>
          </where>
          and utal.uid = #{uid} and utal.`mode` = 1 and utal.deleted = 0
        order by utal.create_time desc
    </select>

    <select id="listUserInviteMsg" resultMap="applyOrInviteMsgVO">
        select utal.id, utal.uid, utal.`status`, utal.message, utal.recruitment_id, tr.`name` recruitment_name, t.id team_id, t.logo, t.`name` team_name, utal.create_time, utal.update_time
            from user_team_apply_log utal
                inner join teams t on t.id = utal.team_id
                left join teams_recruitments tr on (tr.id = utal.recruitment_id and tr.team_id = t.id)
        <where>
            1=1
            <if test="status!=null">
                and utal.`status` = #{status}
            </if>
        </where>
         and utal.uid = #{uid} and utal.`mode` = 2 and utal.deleted = 0
        order by utal.create_time desc
    </select>

    <select id="listTeamApplyMsg" resultMap="applyOrInviteMsgVO">
        select utal.id, utal.uid, utal.`status`, utal.message, utal.recruitment_id, tr.`name` recruitment_name, u.avatar, u.nickname, utal.create_time, utal.update_time
            from user_team_apply_log utal
                left join teams_recruitments tr on utal.recruitment_id = tr.id
                inner join `user` u on u.uid = utal.uid
        <where>
            1=1
            <if test="status!=null">
                and utal.`status` = #{status}
            </if>
        </where>
        and utal.team_id in
         <foreach collection="teamIds" item="teamId" open="(" close=")" separator=",">
             #{teamId}
         </foreach>
         and utal.`mode` = 1 and utal.deleted = 0
        order by utal.create_time desc
    </select>

    <select id="listTeamInviteMsg" resultMap="applyOrInviteMsgVO">
        select utal.id, utal.uid, utal.`status`, utal.message, utal.recruitment_id, tr.`name` recruitment_name, u.avatar, u.nickname, utal.create_time, utal.update_time
            from user_team_apply_log utal
                left join teams_recruitments tr on utal.recruitment_id = tr.id
                inner join `user` u on u.uid = utal.uid
        <where>
            1=1
            <if test="status!=null">
                and utal.`status` = #{status}
            </if>
        </where>
        and utal.team_id in
        <foreach collection="teamIds" item="teamId" open="(" close=")" separator=",">
            #{teamId}
        </foreach>
         and utal.`mode` = 2 and utal.deleted = 0
        order by utal.create_time desc
    </select>
</mapper>
